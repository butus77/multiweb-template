'use client';

import {useTheme} from './ThemeProvider';

export default function ThemeToggle() {
  const {theme, setTheme} = useTheme();

  const cycle = () => {
    setTheme(theme === 'light' ? 'dark' : theme === 'dark' ? 'system' : 'light');
  };

  const label =
    theme === 'light' ? '‚òÄÔ∏è' :
    theme === 'dark'  ? 'üåô' :
                        'üñ•Ô∏è';

  return (
    <button
      type="button"
      onClick={cycle}
      aria-label="V√°lt√°s vil√°gos/s√∂t√©t/system"
      className="px-2 py-1 rounded border text-sm"
      title={`Theme: ${theme}`}
    >
      {label}
    </button>
  );
}
// src/app/page.tsx
// A ThemeToggle komponens a t√©ma (vil√°gos/s√∂t√©t) v√°lt√°s√°ra szolg√°l
// A useTheme hook seg√≠ts√©g√©vel √©ri el a jelenlegi t√©m√°t √©s a v√°lt√≥ f√ºggv√©nyt
// A useEffect hook biztos√≠tja, hogy a komponens csak a kliens oldalon renderel≈ëdj√∂n
// Ez elker√ºli a szerver √©s kliens k√∂z√∂tti elt√©r√©seket (hydration issues)
// A gombon egy ikon √©s sz√∂veg jelenik meg, ami a jelenlegi t√©m√°t√≥l f√ºgg≈ëen v√°ltozik
// A gomb megnyom√°sakor a setTheme f√ºggv√©ny h√≠v√≥dik meg, ami v√°lt a vil√°gos √©s s√∂t√©t m√≥d k√∂z√∂tt     